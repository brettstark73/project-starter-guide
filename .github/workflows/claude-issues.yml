name: Claude Issue Assistant

on:
  issues:
    types: [opened, edited]
  issue_comment:
    types: [created, edited]

jobs:
  claude-respond:
    runs-on: ubuntu-latest
    # Only run if @claude is mentioned
    if: contains(github.event.issue.body, '@claude') || contains(github.event.comment.body, '@claude')

    permissions:
      issues: write
      contents: read

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Get issue context
        id: context
        run: |
          if [ "${{ github.event_name }}" == "issue_comment" ]; then
            echo "text=${{ github.event.comment.body }}" >> $GITHUB_OUTPUT
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          else
            echo "text=${{ github.event.issue.body }}" >> $GITHUB_OUTPUT
            echo "issue_number=${{ github.event.issue.number }}" >> $GITHUB_OUTPUT
          fi

      - name: Call Claude API
        id: claude
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          ISSUE_TITLE="${{ github.event.issue.title }}"
          ISSUE_BODY="${{ github.event.issue.body }}"
          COMMENT_BODY="${{ github.event.comment.body }}"

          # Determine the prompt based on event type
          if [ "${{ github.event_name }}" == "issue_comment" ]; then
            PROMPT="A user mentioned you in a GitHub issue comment. Please help with their request.\n\nIssue Title: ${ISSUE_TITLE}\n\nOriginal Issue: ${ISSUE_BODY}\n\nComment: ${COMMENT_BODY}"
          else
            PROMPT="A user mentioned you in a new GitHub issue. Please help with their request.\n\nIssue Title: ${ISSUE_TITLE}\n\nIssue Body: ${ISSUE_BODY}"
          fi

          # Call Claude API
          RESPONSE=$(curl -s https://api.anthropic.com/v1/messages \
            -H "content-type: application/json" \
            -H "x-api-key: $ANTHROPIC_API_KEY" \
            -H "anthropic-version: 2023-06-01" \
            -d "{
              \"model\": \"claude-sonnet-4-20250514\",
              \"max_tokens\": 4096,
              \"messages\": [{
                \"role\": \"user\",
                \"content\": \"${PROMPT}\"
              }]
            }")

          # Extract the response text
          CLAUDE_RESPONSE=$(echo "$RESPONSE" | jq -r '.content[0].text')

          # Save to output (handle multiline)
          {
            echo 'response<<EOF'
            echo "$CLAUDE_RESPONSE"
            echo 'EOF'
          } >> $GITHUB_OUTPUT

      - name: Post Claude's response
        uses: actions/github-script@v7
        with:
          script: |
            const response = `${{ steps.claude.outputs.response }}`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: ${{ steps.context.outputs.issue_number }},
              body: `ðŸ¤– **Claude's Response:**\n\n${response}\n\n---\n*Powered by Claude via GitHub Actions*`
            });
